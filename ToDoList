import java.util.ArrayList;
import java.util.Collections;

public class ToDoList implements ToDoListInterface {
	
	private ArrayList<Task> taskArray;
	private String name = "";
	
	public ToDoList(String name) {
		taskArray = new ArrayList<Task>();
		this.name=name;
	}
	
	
	/**
	 * Returns the name of this ToDoList.
	 * @return the name.
	 */
	public String getName() {
	return name;
	}
	/**
	 * Adds the given task to this list.
	 * @param task The task to add.
	 */
	public void addTask(Task task) {
		taskArray.add(task);
	
	}
	
	
	
	
	public void addTask(String description, Task.Category category) 
	{
		taskArray.add(new Task(description, category));
		
		
	}

	
	
	
	/**
	 * Adds a task with the given description to this list.
	 * @param description Description of the task to add.
	 */
        public void addTask(String description)
        {
        	taskArray.add(new Task(description));
        }

	/**
	 * Returns the next incomplete task with the highest priority.  
	 * @return the next task or null if there are no tasks in the list or if all the tasks are complete.
	 */
	public Task getWork() {
		if (taskArray.isEmpty()) {
			return null;
		}
		Task highPriority = Collections.max(taskArray);
		if (!highPriority.isComplete() ){
			return highPriority;
		} else {
			return null;
		}
	}

	/**
	 * Returns a copy of the tasks ArrayList, not a reference to the internal
	 *    list of tasks.
	 * @return a copy of the tasks ArrayList.
	 */
	public ArrayList<Task> getTaskList() {
	ArrayList taskCopy = new ArrayList<Task>();
	
	for(Task a: taskArray)
	taskCopy.add(a);
	return taskCopy;
	}

	/**
	 * Returns a string of all the tasks in the list, one per line. 
	 * <pre>
	 * -------------
	 * ToDoList name
	 * -------------
	 * task 1
	 * task 2
	 * etc...
	 * </pre>
	 * @return a String representing the ToDoList.
	 */
	public String toString() {
		String a = "----------- \n"  ;
		a += "ToDoList name \n" + a;
			
		
		for (Task z: taskArray) {
		  a += (z.toString() + "\n");
		
	}return a ;

	}
	
	
}
