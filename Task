
public class Task implements Comparable<Task> {

	private String description;
	private int priority;
	private boolean complete;
	private Category category;
	


	

	public Task(String description) {
		this.description = description;
		priority = 0;
		complete =  true;
		category = Category.NONE;
	}

	public Task(String description, int priority) {
		this.description = description;
		this.priority = priority;
		complete =  false;
		category = Category.NONE;
	}
	public Task(String description, Task.Category category) {
		this.description = description;
		priority = 0;
		complete =  false;
		category = Category.NONE;
	}

	public String toString() {
		if (complete) {
			return ("[X]" + description + " , " + category + " " + priority) ;

		} return "[]" + description + " , " + category + " " + priority;
	}

	//activity 15

	//equals method
	public boolean equals(Task otherTask) {
		if (this.description.equalsIgnoreCase(otherTask.getDescription()) && this.category.equals(otherTask.getCategory())) {
			return true;
		}
		return false;
	}
	//compare to
	public int compareTo(Task otherTask) {
		if(this.isComplete() == otherTask.isComplete()) {
			if(this.priority == otherTask.getPriority()) {
				return 0;
			}
			if(this.priority < otherTask.getPriority()) { 
				return-1;
			}
			if(this.priority > otherTask.getPriority()) { 
				return 1;
			}

		} else if (this.isComplete() == true && otherTask.isComplete() == false) {
			return -1;

		}			
		return 1;


	}

	// activity 17
	public enum Category {PERSONAL, WORK, NONE};

	
	
	
	
	
	
	
	



	public String getDescription() {
		return description;
	}
	public void setDescription(String description) {
		this.description = description;
	}
	public int getPriority() {
		return priority;
	}
	public void setPriority(int priority) {
		this.priority = priority;
	}
	public boolean isComplete() {
		return complete;
	}
	public void setComplete(boolean complete) {
		this.complete = complete;
	}
	
	public Category getCategory() {
		return category;
	}

	public void setCategory(Category category) {
		this.category = category;
	}
}
